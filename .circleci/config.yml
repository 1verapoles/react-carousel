version: 2
jobs:
  build:
    working_directory: ~/app
    docker:
      - image: circleci/node:8.9.1
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install npm dependencies
          command: npm install --production=false
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
  test-regression:
    docker:
      - image: circleci/node:8.9.1
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install npm dependencies
          command: npm install --production=false
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          name: Test-regression
          command: npm run test-regression
  test-unit:
    docker:
      - image: circleci/node:8.9.1
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install npm dependencies
          command: npm install --production=false
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          name: Test-unit
          command: npm run test:coverage:ci
      - run:
          name: Generate coveralls config
          command: "echo repo_token: $REPO_TOKEN > ./.coveralls.yml"
      - run:
          name: Upload coverage to coveralls
          command: cat ./coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js
  lint:
    docker:
      - image: circleci/node:8.9.1
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install npm dependencies
          command: npm install --production=false
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          name: Lint
          command: npm run lint
  selenium:
    docker:
      - image: selenium/standalone-chrome:latest
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install npm dependencies
          command: npm install --production=false
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          name: Selenium
          command: npm run selenium-start
  compile:
    docker:
      - image: circleci/node:8.9.1
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install npm dependencies
          command: npm install --production=false
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          name: Compile
          command: npm run build
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - selenium
      - test-regression:
          requires:
            - build
            - selenium
      - test-unit:
          requires:
            - build
      - lint:
          requires:
            - build
      - compile:
          requires:
            - build
